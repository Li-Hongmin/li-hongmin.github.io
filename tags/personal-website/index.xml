<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>personal website | 李鸿敏 (Li Hongmin)</title>
    <link>https://li-hongmin.github.io/tags/personal-website/</link>
      <atom:link href="https://li-hongmin.github.io/tags/personal-website/index.xml" rel="self" type="application/rss+xml" />
    <description>personal website</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><lastBuildDate>Sun, 22 Dec 2019 23:53:20 +0900</lastBuildDate>
    <image>
      <url>https://li-hongmin.github.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>personal website</title>
      <link>https://li-hongmin.github.io/tags/personal-website/</link>
    </image>
    
    <item>
      <title>【学习笔记】用Hugo建站来写个人博客 Day2</title>
      <link>https://li-hongmin.github.io/post/191222_hugo/</link>
      <pubDate>Sun, 22 Dec 2019 23:53:20 +0900</pubDate>
      <guid>https://li-hongmin.github.io/post/191222_hugo/</guid>
      <description>&lt;p&gt;&lt;strong&gt;上次我们已经做个一个网站在本地了，这次要把它部署到Github pages上。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文主要参考
&lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hugo官方文档&lt;/a&gt;,需要github和本地两别操作。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;部署前的准备&#34;&gt;部署前的准备&lt;/h1&gt;
&lt;p&gt;首先要确认三点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确认本地有无
&lt;a href=&#34;https://git-scm.com/downloads&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git&lt;/a&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;git --version
# git version 2.21.0 (Apple Git-122.2)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;确认
&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;账号有无，可以免费申请一个。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;已经有一个可以发布的Hugo网站&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;两种github-pages&#34;&gt;两种GitHub Pages&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;User/Organization Pages (https://&amp;lt;USERNAME|ORGANIZATION&amp;gt;.github.io/)&lt;/li&gt;
&lt;li&gt;Project Pages (https://&amp;lt;USERNAME|ORGANIZATION&amp;gt;.github.io/&lt;PROJECT&gt;/)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;部署设置&#34;&gt;部署设置&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在github创建新的pages repository，如果是第一种就把&amp;lt;USERNAME|ORGANIZATION&amp;gt;换成你的用户名或者组织名，则输入如下图：















&lt;figure id=&#34;figure-我因为已经有同名的repository了所以不可以创建&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;creatpages.png&#34; data-caption=&#34;我因为已经有同名的repository了，所以不可以创建。&#34;&gt;


  &lt;img src=&#34;creatpages.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    我因为已经有同名的repository了，所以不可以创建。
  &lt;/figcaption&gt;


&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再用同样的方法在github创建新的repository用来放hugo的文件，以下用&lt;code&gt;&amp;lt;YOUR-PROJECT&amp;gt;&lt;/code&gt;代替这个repository的名字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本地git clone，把&lt;code&gt;&amp;lt;YOUR-PROJECT-URL&amp;gt;&lt;/code&gt;换成网页url地址，在合适的目录下执行命令:
&lt;code&gt;git clone &amp;lt;YOUR-PROJECT-URL&amp;gt; &amp;amp;&amp;amp; cd &amp;lt;YOUR-PROJECT&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复制粘贴之前hugo的文件到clone的目录下面。用&lt;code&gt;hugo server&lt;/code&gt;来检查下正不正常，浏览器打开
&lt;a href=&#34;http://localhost:1313&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost:1313&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试过后，用&lt;code&gt;rm -rf public/&lt;/code&gt;来移除所有public下的文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建一个submodule：&lt;code&gt;git submodule add -b master git@github.com:&amp;lt;USERNAME&amp;gt;/&amp;lt;USERNAME&amp;gt;.github.io.git public&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个submodule就会同步到&lt;code&gt;&amp;lt;USERNAME&amp;gt;/&amp;lt;USERNAME&amp;gt;.github.io&lt;/code&gt;，而整个本地目录会同步到&lt;code&gt;&amp;lt;YOUR-PROJECT&amp;gt;&lt;/code&gt;这里。&lt;/p&gt;
&lt;h1 id=&#34;部署网站&#34;&gt;部署网站&lt;/h1&gt;
&lt;h2 id=&#34;生成网站并部署&#34;&gt;生成网站并部署&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;hugo
cd public
git add .
git commit -m &amp;quot;Build website&amp;quot;
git push origin master
cd ..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样应就可以了，浏览器打开&lt;code&gt;&amp;lt;USERNAME&amp;gt;.github.io&lt;/code&gt;就可以看到了。&lt;/p&gt;
&lt;h2 id=&#34;自动部署脚本&#34;&gt;自动部署脚本&lt;/h2&gt;
&lt;p&gt;可以创建一个deploy.sh文件，好像
&lt;a href=&#34;https://github.com/Li-Hongmin/academic-kickstart/blob/master/deploy.sh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这样&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;然后记得&lt;code&gt;chmod +x deploy.sh&lt;/code&gt;赋予权限。&lt;/p&gt;
&lt;p&gt;只要运行 &lt;code&gt;./deploy.sh &amp;quot;Your optional commit message&amp;quot;&lt;/code&gt;就可以提交更改了。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;流水线作业，总是不够详细。&lt;/p&gt;
&lt;p&gt;另外本网站的制作是根据academic模版，依照其
&lt;a href=&#34;https://sourcethemes.com/academic/zh/docs/deployment/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官网&lt;/a&gt;而部署，也很简单。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
