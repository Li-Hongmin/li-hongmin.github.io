[{"authors":["Li Hongmin"],"categories":null,"content":"Li Hongmin is a PhD student of Computer Science at Mathematical Modeling \u0026amp; Algorithms Laboratory in University of Tsukuba. His research interests include Spectral clustering, Machine learning, Precision Medicine.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Li Hongmin is a PhD student of Computer Science at Mathematical Modeling \u0026amp; Algorithms Laboratory in University of Tsukuba. His research interests include Spectral clustering, Machine learning, Precision Medicine.","tags":null,"title":"Li Hongmin","type":"authors"},{"authors":[],"categories":[],"content":"学习笔记集合：  介绍了简单的Hugo应用。  跳转到Day1\n介绍了github pages和部署。  跳转到Day2\n","date":1577031190,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577031190,"objectID":"92b6ea3bccbff8081c3ee31e444d7e2c","permalink":"/project/hugo/","publishdate":"2019-12-23T01:13:10+09:00","relpermalink":"/project/hugo/","section":"project","summary":"A notebook for using hugo to create my website","tags":["hugo"],"title":"【学习笔记】Hugo 建站","type":"project"},{"authors":[],"categories":[],"content":"上次我们已经做个一个网站在本地了，这次要把它部署到Github pages上。\n本文主要参考hugo官方文档,需要github和本地两别操作。\n部署前的准备 首先要确认三点：\n 确认本地有无git:  git --version # git version 2.21.0 (Apple Git-122.2)   确认GitHub账号有无，可以免费申请一个。\n  已经有一个可以发布的Hugo网站\n  两种GitHub Pages  User/Organization Pages (https://\u0026lt;USERNAME|ORGANIZATION\u0026gt;.github.io/) Project Pages (https://\u0026lt;USERNAME|ORGANIZATION\u0026gt;.github.io//)  部署设置   在github创建新的pages repository，如果是第一种就把\u0026lt;USERNAME|ORGANIZATION\u0026gt;换成你的用户名或者组织名，则输入如下图：    我因为已经有同名的repository了，所以不可以创建。     再用同样的方法在github创建新的repository用来放hugo的文件，以下用\u0026lt;YOUR-PROJECT\u0026gt;代替这个repository的名字\n  本地git clone，把\u0026lt;YOUR-PROJECT-URL\u0026gt;换成网页url地址，在合适的目录下执行命令: git clone \u0026lt;YOUR-PROJECT-URL\u0026gt; \u0026amp;\u0026amp; cd \u0026lt;YOUR-PROJECT\u0026gt;\n  复制粘贴之前hugo的文件到clone的目录下面。用hugo server来检查下正不正常，浏览器打开http://localhost:1313。\n  测试过后，用rm -rf public/来移除所有public下的文件。\n  创建一个submodule：git submodule add -b master git@github.com:\u0026lt;USERNAME\u0026gt;/\u0026lt;USERNAME\u0026gt;.github.io.git public\n  这个submodule就会同步到\u0026lt;USERNAME\u0026gt;/\u0026lt;USERNAME\u0026gt;.github.io，而整个本地目录会同步到\u0026lt;YOUR-PROJECT\u0026gt;这里。\n部署网站 生成网站并部署 hugo cd public git add . git commit -m \u0026quot;Build website\u0026quot; git push origin master cd ..  这样应就可以了，浏览器打开\u0026lt;USERNAME\u0026gt;.github.io就可以看到了。\n自动部署脚本 可以创建一个deploy.sh文件，好像这样.\n然后记得chmod +x deploy.sh赋予权限。\n只要运行 ./deploy.sh \u0026quot;Your optional commit message\u0026quot;就可以提交更改了。\n总结 流水线作业，总是不够详细。\n另外本网站的制作是根据academic模版，依照其官网而部署，也很简单。\n","date":1577026400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577026400,"objectID":"162c2b8665175b7eb48685befbbbd570","permalink":"/post/191222_hugo/","publishdate":"2019-12-22T23:53:20+09:00","relpermalink":"/post/191222_hugo/","section":"post","summary":"上次我们已经做个一个网站在本地了，这次要把它部署到Github pages上。\n本文主要参考hugo官方文档,需要github和本地两别操作。\n部署前的准备 首先要确认三点：\n 确认本地有无git:  git --version # git version 2.21.0 (Apple Git-122.2)   确认GitHub账号有无，可以免费申请一个。\n  已经有一个可以发布的Hugo网站\n  两种GitHub Pages  User/Organization Pages (https://\u0026lt;USERNAME|ORGANIZATION\u0026gt;.github.io/) Project Pages (https://\u0026lt;USERNAME|ORGANIZATION\u0026gt;.github.io//)  部署设置   在github创建新的pages repository，如果是第一种就把\u0026lt;USERNAME|ORGANIZATION\u0026gt;换成你的用户名或者组织名，则输入如下图：    我因为已经有同名的repository了，所以不可以创建。     再用同样的方法在github创建新的repository用来放hugo的文件，以下用\u0026lt;YOUR-PROJECT\u0026gt;代替这个repository的名字\n  本地git clone，把\u0026lt;YOUR-PROJECT-URL\u0026gt;换成网页url地址，在合适的目录下执行命令: git clone \u0026lt;YOUR-PROJECT-URL\u0026gt; \u0026amp;\u0026amp; cd \u0026lt;YOUR-PROJECT\u0026gt;\n  复制粘贴之前hugo的文件到clone的目录下面。用hugo server来检查下正不正常，浏览器打开http://localhost:1313。\n  测试过后，用rm -rf public/来移除所有public下的文件。\n  创建一个submodule：git submodule add -b master git@github.","tags":["hugo","github pages","personal website"],"title":"【学习笔记】用Hugo建站来写个人博客 Day2","type":"post"},{"authors":[],"categories":[],"content":"建站一直是一个很复杂的工程，不过总有捷径。本文介绍一种快速建立静态网站的工具hugo。hugo是基于go语言新兴静态网站生成工具，非常快速轻便。我们只需要用markdown来写博客直接生成网页，可以让我们专注于内容。另外有超多主题可供选择，换个装潢模版也很容易。\n缘起 我目前在读Ph.D平时读论文时会做一些笔记，一直想把这些笔记整理分享出来。 我于是开始尝试使用个人博客来记录学习过程整理思路，之后还能做一些页面展示研究成果。\n通过一番考察我选择先用Hugo建立一个网站。 详细Hugo是什么请读者自行了解，我理解就是go语言写的快捷建站工具，并且只要用markdown语言就可以写页面了。 同时在过程中把自己的心得分享出来供后来者参考。\n安装和一键建站 这里我主要参考官网的Quick Start。\n 安装 Hugo 我的环境时macOS，使用Homebrew安装：  brew install hugo hugo version  最后得到这样的信息：Hugo Static Site Generator v0.61.0/extended darwin/amd64 BuildDate: unknown。\n另外说Homebrew是一个非常好的软件管理软件，一行代码就安装好了，如果还没有试过的人一定要尝试一下。\n如果是Windows或linux用户的话参考这里进行安装。\n一键建站  在terminal或命令行里找个合适的文件路径，执行以下命令。\nhugo new site yourFolderName  这时Hugo会生成一个网站模版。命令中_yourFolderName_就是文件夹名，可以随便起。\n添加主题  主题是Hugo的一大优势，海量主题任你选。这里是主题库。\n我们这里就用官方教程里的Ananke。\ncd quickstart # Download the theme git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke # Note for non-git users: # - If you do not have git installed, you can download the archive of the latest # version of this theme from: # https://github.com/budparr/gohugo-theme-ananke/archive/master.zip # - Extract that .zip file to get a \u0026quot;gohugo-theme-ananke-master\u0026quot; directory. # - Rename that directory to \u0026quot;ananke\u0026quot;, and move it into the \u0026quot;themes/\u0026quot; directory. # End of note for non-git users. # Edit your config.toml configuration file # and add the Ananke theme. echo 'theme = \u0026quot;ananke\u0026quot;' \u0026gt;\u0026gt; config.toml  添加页面  生成第一个页面。\nhugo new posts/my-first-post.md  第一个页面看起来像这样：\n--- title: \u0026quot;My First Post\u0026quot; date: 2019-03-26T08:47:11+01:00 draft: true ---  可以用你喜欢的IDE来写markdown文件，直接就可以生成网站了。\n运行Hugo服务器  终于到来一键生成网站的时候了，虽然这里的一键是一行命令。\nhugo server -D  最后提示\nWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop  浏览器打开http://localhost:1313/看看是不是成功了。\n看上去就像是这样子。\n总结 简单易学，一行命令完事。\n建站大坑，容我慢慢来填。\n","date":1577025505,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577025505,"objectID":"c7e25562eb873e4308c168afd9d3657a","permalink":"/post/191217hugo/","publishdate":"2019-12-22T23:38:25+09:00","relpermalink":"/post/191217hugo/","section":"post","summary":"建站一直是一个很复杂的工程，不过总有捷径。本文介绍一种快速建立静态网站的工具hugo。hugo是基于go语言新兴静态网站生成工具，非常快速轻便。我们只需要用markdown来写博客直接生成网页，可以让我们专注于内容。另外有超多主题可供选择，换个装潢模版也很容易。\n缘起 我目前在读Ph.D平时读论文时会做一些笔记，一直想把这些笔记整理分享出来。 我于是开始尝试使用个人博客来记录学习过程整理思路，之后还能做一些页面展示研究成果。\n通过一番考察我选择先用Hugo建立一个网站。 详细Hugo是什么请读者自行了解，我理解就是go语言写的快捷建站工具，并且只要用markdown语言就可以写页面了。 同时在过程中把自己的心得分享出来供后来者参考。\n安装和一键建站 这里我主要参考官网的Quick Start。\n 安装 Hugo 我的环境时macOS，使用Homebrew安装：  brew install hugo hugo version  最后得到这样的信息：Hugo Static Site Generator v0.61.0/extended darwin/amd64 BuildDate: unknown。\n另外说Homebrew是一个非常好的软件管理软件，一行代码就安装好了，如果还没有试过的人一定要尝试一下。\n如果是Windows或linux用户的话参考这里进行安装。\n一键建站  在terminal或命令行里找个合适的文件路径，执行以下命令。\nhugo new site yourFolderName  这时Hugo会生成一个网站模版。命令中_yourFolderName_就是文件夹名，可以随便起。\n添加主题  主题是Hugo的一大优势，海量主题任你选。这里是主题库。\n我们这里就用官方教程里的Ananke。\ncd quickstart # Download the theme git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke # Note for non-git users: # - If you do not have git installed, you can download the archive of the latest # version of this theme from: # https://github.","tags":["hugo","blog","建站，博客"],"title":"【学习笔记】用Hugo建站来写个人博客 Day1","type":"post"},{"authors":["Xiucai Ye","Hongmin Li","Tetsuya Sakurai","Pei-Wei Shueng"],"categories":[],"content":"","date":1577007783,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577007783,"objectID":"5200b2210c2d271d03c2eac782f8f257","permalink":"/publication/ensemble_feature_learning_to_identify_risk_factors_for_predicting_secondary_cancer/","publishdate":"2019-12-22T18:43:03+09:00","relpermalink":"/publication/ensemble_feature_learning_to_identify_risk_factors_for_predicting_secondary_cancer/","section":"publication","summary":"An effective ensemble feature learning method to identify the risk factors for predicting secondary cancer by considering class imbalance and patient heterogeneity.","tags":["secondary cancer","risk factors","class imbalance","patient heterogeneity","spectral clustering","ensemble learning"],"title":"Ensemble Feature Learning to Identify Risk Factors for Predicting Secondary Cancer","type":"publication"},{"authors":["Xiucai Ye","Hongmin Li","Akira Imakura","Tetsuya Sakurai"],"categories":[],"content":"","date":1576898274,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576898274,"objectID":"612195691a61badc10a9bf828817b090","permalink":"/publication/distributed_collaborative_feature_selection_based_on_intermediate_representation/","publishdate":"2019-08-10T12:17:54+09:00","relpermalink":"/publication/distributed_collaborative_feature_selection_based_on_intermediate_representation/","section":"publication","summary":"A novel distributed method which allows collaborative feature selection for multiple parties without revealing their original data.","tags":["Unsupervised Learning","Feature Selection","Learning Sparse Models","Dimensionality Reduction and Manifold Learning"],"title":"Distributed collaborative feature selection based on intermediate representation","type":"publication"},{"authors":["Xiucai Ye","Hongmin Li","Tetsuya Sakurai","Zhi Liu"],"categories":["Spectral Clustering"],"content":"","date":1576849824,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576849824,"objectID":"4809cbd1424ea9165d0ab082220e5751","permalink":"/publication/lsch/","publishdate":"2018-10-08T00:00:00Z","relpermalink":"/publication/lsch/","section":"publication","summary":"An accelerated spectral clustering method based on sparse presentation where each data point is presented as sparse linear combinations of a part of representative data points.","tags":["Spectral Clustering","Hubness","Large Scale","Sparse Representation"],"title":"Large Scale Spectral Clustering Using Sparse Representation Based on Hubness","type":"publication"}]